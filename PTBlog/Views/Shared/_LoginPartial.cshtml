@using Microsoft.AspNetCore.Identity
@using PTBlog.Models

@inject SignInManager<UserModel> SignInManager
@inject UserManager<UserModel> UserManager

@{
    var userModel = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <img class="nav-profile-picture" src="@userModel!.ProfilePictureURL" alt="@userModel.Username's profile picture" /> @userModel.Username
        </a>

        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
            <li><a class="dropdown-item" asp-controller="Users" asp-action="Profile" asp-route-id="@userModel.Id">Profile</a></li>
            <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Manage</a></li>
        </ul>
    </li>

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
